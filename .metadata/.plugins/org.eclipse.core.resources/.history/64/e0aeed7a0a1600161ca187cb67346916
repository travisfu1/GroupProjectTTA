package Zoo;

import java.util.ArrayList;
import java.util.Scanner;

public class Weights {
	private ArrayList<Double> weights;

	public Weights() {
		setWeights("");
	}

	public Weights(String gradeList) {
		setWeights(gradeList);
	}

	public void setWeights(String gradeList) {
		// Scanner key = new Scanner(gradeList);
		// int gradeCount = key.nextInt();
		// Weights = new double[gradeCount];
		// gradeList.substring(gradeList.indexOf("-"));
		// int index = 0;
		// while (key.hasNext()) {
		// if (key.hasNextDouble())
		// Weights[index++] = key.nextDouble();
		// else if (key.hasNextInt())
		// Weights[index++] = (double) key.nextInt();
		// else
		// key.next();
		// }
		Scanner key = new Scanner(gradeList);
		int gradeCount = key.nextInt();
		Weights = new ArrayList<Double>();
		gradeList.substring(gradeList.indexOf("-"));
		int index = 0;
		while (key.hasNext()) {
			if (key.hasNextDouble())
				Weights.add(key.nextDouble());
			else if (key.hasNextInt())
				Weights.add((double) key.nextInt());
			else
				key.next();
		}
	}

	public void setGrade(int spot, double grade) {
		// Weights[spot] = grade;
		Weights.set(spot, grade);
	}

	public double getSum() {
		// double sum = 0.0;
		// for (int i = 0; i < Weights.length; i++) {
		// sum += Weights[i];
		// }
		// return sum;
		double sum = 0.0;
		for (int i = 0; i < Weights.size(); i++) {
			sum += Weights.get(i);
		}
		return sum;
	}

	public double getLowGrade() {
		// double low = Double.MAX_VALUE;
		// for (int i = 0; i < Weights.length; i++) {
		// low = Math.min(low, Weights[i]);
		// }
		// return low;
		double low = Double.MAX_VALUE;
		for (int i = 0; i < Weights.size(); i++) {
			low = Math.min(low, Weights.get(i));
		}
		return low;
	}

	public double getHighGrade() {
		// double high = Double.MIN_VALUE;
		// for (int i = 0; i < Weights.length; i++) {
		// high = Math.max(high, Weights[i]);
		// }
		// return high;
		double high = Double.MIN_VALUE;
		for (int i = 0; i < Weights.size(); i++) {
			high = Math.max(high, Weights.get(i));
		}
		return high;
	}

	public int getNumWeights() {
		// return Weights.length;
		return Weights.size();
	}

	public String toString() {
		// String output = "";
		// for (int i = 0; i < Weights.length; i++) {
		// output += Weights[i] + " ";
		// }
		// return output;
		String output = "";
		for (int i = 0; i < Weights.size(); i++) {
			output += Weights.get(i) + " ";
		}
		return output;
	}
}
